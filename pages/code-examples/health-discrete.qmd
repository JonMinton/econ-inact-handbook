## Health as a discrete variable (Limiting Long-term Illness)

Modelling discrete health state (LLTI/No LLTI), people aged 16-64

In each wave of the UKHLS, respondents are asked the following question

> Do you have any long-standing physical or mental impairment, illness or disability? By ‘long-standing’ I mean anything that has troubled you over a period of at least 12 months or that is likely to trouble you over a period of at least 12 months.

In the baseline scenario, the observed values of this binary variable, llti are applied to a model which includes llti as an exposure. For the counterfactual scenario, llti is ’switched off\` for all observations.

| model         | df  | AIC      | BIC      | aic_rank | bic_rank |
|---------------|-----|----------|----------|----------|----------|
| `mod_00_llti` | 126 | 288652.3 | 289991.4 | 2        | 2        |
| `mod_llti`    | 132 | 284982.5 | 286385.4 | 1        | 1        |

: AIC and BIC of model specifications

```r
#| cache: true

devtools::load_all(here::here('R'))
library(tidyverse)
# library(haven)
# library(here)
library(nnet)

# devtools::load_all(here('R'))
# base_dir_location <- "big_data/UKDA-6614-stata/stata/stata13_se/ukhls"
# indresp_files <- dir(here(base_dir_location), pattern = "[a-z]_indresp.dta", full.names = TRUE)

varnames <-  c(
  "jbstat", "dvage", "sex", "health"
  )

vartypes <- c(
  "labels", "values", "labels", "labels"
  )

df_ind_llti <- get_ind_level_vars_for_selected_waves(varnames = varnames, vartypes = vartypes, waves = letters[1:11])

# Clean the data 
df_ind_llti_standardised <- 
  df_ind_llti |> 
  # dvage uses negative values to indicate missing. The code below explicitly turns them all to missing values
    mutate(across(dvage, function(x) ifelse(x < 0, NA, x))) |> 
  # This renames dvage to age
    rename(age = dvage) |> 
    filter(between(age, 16, 64))  |> 
    mutate(
      lt_condition = case_when(
        health %in% c("No", "no") ~ FALSE,
        health %in% c("Yes", "yes") ~ TRUE,
        TRUE ~ NA_integer_
      ) |> as.logical()
    ) %>% 
    filter(complete.cases(.)) 

```

```r
#| cache: true
#| message: false
#| warning: false
#| include: false
mod_00_llti <- 
  nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 5),
    data = df_ind_llti_standardised |> 
      filter(!is.na(lt_condition)),
    maxit = 200
  )

mod_llti <- 
  nnet::multinom(
    next_status ~ this_status * sex + splines::bs(age, 5) + lt_condition,
    data = df_ind_llti_standardised,
    maxit = 200
  )
```

```r

aics <- AIC(mod_00_llti, mod_llti)
bics <- BIC(mod_00_llti, mod_llti)

aics |> 
  rownames_to_column(var = "model") |> 
  left_join(
    bics |> rownames_to_column(var="model")    
  ) |> 
  mutate(
    aic_rank = rank(AIC),
    bic_rank = rank(BIC)
  ) |> 
  knitr::kable()
```

```r
#| label: tbl-llti
#| tbl-cap: Estimated effect of Limiting Long-term Illnesses (LLTI) on Economic (In)activity states 

econ_cat_levels <- c("Employed", "Unemployed", "Inactive student", "Inactive care", "Inactive long term sick", "Inactive retired", "Inactive other")


df_ind_ltcondition_wave_j_baseline <- 
  df_ind_llti_standardised |> 
  filter(!is.na(lt_condition)) |> 
  filter(wave == 'j')


df_ind_ltcondition_wave_j_counterfactual <- 
  df_ind_ltcondition_wave_j_baseline  |> 
  mutate(lt_condition = FALSE)


preds_baseline <- predict(mod_llti, newdata = df_ind_ltcondition_wave_j_baseline, type = "probs")


preds_counterfactual <- predict(mod_llti, newdata = df_ind_ltcondition_wave_j_counterfactual, type = "probs")

predictions_summary_matrix <- cbind(
  # The number 2 indicates do the sum function for each column.
  # If it were 1 then this would sum for each row (which should add up to 1 in call cases)
  apply(preds_baseline, 2, sum),
  apply(preds_counterfactual, 2, sum)
)

colnames(predictions_summary_matrix) <- c("baseline", "counterfactual")


predictions_summary_matrix <- cbind(
  # The number 2 indicates do the sum function for each column.
  # If it were 1 then this would sum for each row (which should add up to 1 in call cases)
  apply(preds_baseline, 2, function(x) round(sum(x), 0)),
  apply(preds_counterfactual, 2, function(x) round(sum(x), 0))
)

colnames(predictions_summary_matrix) <- c("base", "counterfactual")

tbl_mod_llti <- 
  predictions_summary_matrix |> 
    as.data.frame() |> 
    rownames_to_column(var = "State") |> 
    mutate(
        State = factor(
          State, 
          ordered = TRUE, 
          levels = econ_cat_levels
        )
      ) |> 
    arrange(State) |> 
    mutate(
      `Absolute Change` = counterfactual - base,
      `Relative Change` = `Absolute Change` / base
    ) |> 
    mutate(
      `Relative Change` = ifelse(
        `Relative Change` > 0, 
        glue::glue("{round(100 * `Relative Change`, 1)}% up" ),
        glue::glue("{round(-100 * `Relative Change`, 1)}% down")
        )
    )


tbl_mod_llti |> knitr::kable()
```

@tbl-llti indicates that, if everyone with a LLTI ceased to have one, the proportion of the population who are inactive for reasons of long-term sickness would be reduced by 60%. The proportion of the population in each of the other states, both economically inactive and active, would then increase. This includes a predicted 5.4% increase in unemployment, an 8.6% increase in long-term carers, and a 7.4% increase in those of working age who retire.

The finding that removing LLTI would greatly decrease the economically inactive long-term sick population should, of course, not be surprising. We can interpret these results, broadly, as suggesting that the majority of inactivity due to long-term sickness is caused by LLTI. We might in fact consider the 40% or so who remain in this category even in a scenario in which no one has LLTI to be more surprising.